{
  "_args": [
    [
      "shelf-pack@https://registry.npmjs.org/shelf-pack/-/shelf-pack-1.1.0.tgz",
      "/Users/owenlamb/Desktop/vt-app/node_modules/mapbox-gl"
    ]
  ],
  "_from": "shelf-pack@>=1.0.0 <2.0.0",
  "_id": "shelf-pack@1.1.0",
  "_inCache": true,
  "_location": "/mapbox-gl/shelf-pack",
  "_phantomChildren": {},
  "_requested": {
    "name": "shelf-pack",
    "raw": "shelf-pack@https://registry.npmjs.org/shelf-pack/-/shelf-pack-1.1.0.tgz",
    "rawSpec": "https://registry.npmjs.org/shelf-pack/-/shelf-pack-1.1.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/shelf-pack/-/shelf-pack-1.1.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/mapbox-gl"
  ],
  "_resolved": "https://registry.npmjs.org/shelf-pack/-/shelf-pack-1.1.0.tgz",
  "_shasum": "b4679afdd00ad68dfd9bbd2b5a3e819293a74d82",
  "_shrinkwrap": null,
  "_spec": "shelf-pack@https://registry.npmjs.org/shelf-pack/-/shelf-pack-1.1.0.tgz",
  "_where": "/Users/owenlamb/Desktop/vt-app/node_modules/mapbox-gl",
  "author": {
    "email": "bryan@mapbox.com",
    "name": "Bryan Housel"
  },
  "bugs": {
    "url": "https://github.com/mapbox/shelf-pack/issues"
  },
  "dependencies": {},
  "description": "A 2D rectangular bin packing data structure that uses the Shelf Best Height Fit heuristic",
  "devDependencies": {
    "benchmark": "2.1.0",
    "bin-pack": "1.0.2",
    "documentation": "4.0.0-beta5",
    "eslint": "3.0.1",
    "rollup": "0.34.1",
    "tap": "6.1.1"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "homepage": "https://github.com/mapbox/shelf-pack#readme",
  "jsnext:main": "index.js",
  "keywords": [
    "bin packing",
    "sprite"
  ],
  "license": "ISC",
  "main": "index.umd.js",
  "name": "shelf-pack",
  "optionalDependencies": {},
  "readme": "[![npm version](https://badge.fury.io/js/shelf-pack.svg)](https://badge.fury.io/js/shelf-pack)\n[![Build Status](https://circleci.com/gh/mapbox/shelf-pack.svg?style=svg)](https://circleci.com/gh/mapbox/shelf-pack)\n\n## shelf-pack\n\nA 2D rectangular [bin packing](https://en.wikipedia.org/wiki/Bin_packing_problem)\ndata structure that uses the Shelf Best Height Fit heuristic.\n\n\n### What is it?\n\n`shelf-pack` is a library for packing little rectangles into a big rectangle.  This sounds simple enough,\nbut finding an optimal packing is a problem with [NP-Complete](https://en.wikipedia.org/wiki/NP-completeness)\ncomplexity.  One useful application of bin packing is to assemble icons or glyphs into a sprite texture.\n\nThere are many ways to approach the bin packing problem, but `shelf-pack` uses the Shelf Best\nHeight Fit heuristic.  It works by dividing the total space into \"shelves\", each with a certain height.\nThe allocator packs rectangles onto whichever shelf minimizes the amount of wasted vertical space.\n\n`shelf-pack` is simple, fast, and works best when the rectangles have similar heights (icons and glyphs\nare like this).  It is not a generalized bin packer, and can potentially waste a lot of space if the\nrectangles vary significantly in height.\n\n\n### How fast is it?\n\nReally fast!  `shelf-pack` is several orders of magnitude faster than the more general\n[`bin-pack`](https://www.npmjs.com/package/bin-pack) library.\n\n```bash\n> npm run bench\n\nShelfPack allocate fixed bins x 1,923 ops/sec ±1.44% (85 runs sampled)\nShelfPack allocate random width bins x 1,707 ops/sec ±1.39% (84 runs sampled)\nShelfPack allocate random height bins x 1,632 ops/sec ±2.07% (86 runs sampled)\nShelfPack allocate random height and width bins x 1,212 ops/sec ±0.81% (89 runs sampled)\nBinPack allocate fixed bins x 2.26 ops/sec ±6.89% (10 runs sampled)\nBinPack allocate random width bins x 2.22 ops/sec ±7.21% (10 runs sampled)\nBinPack allocate random height bins x 2.21 ops/sec ±7.34% (10 runs sampled)\nBinPack allocate random height and width bins x 1.95 ops/sec ±4.81% (9 runs sampled)\n```\n\n\n### Usage\n\n#### Basic\n\n```js\nvar ShelfPack = require('shelf-pack');\n\n// Initialize the sprite with a width and height..\nvar sprite = new ShelfPack(64, 64);\n\n// Pack bins one at a time..\nfor (var i = 0; i < 5; i++) {\n    var bin = sprite.packOne(32, 32);   // request width, height\n    // returns an bin object with `x`, `y`, `w`, `h`, `width`, `height` properties..\n\n    if (bin) {\n        console.log('bin packed at ' + bin.x + ', ' + bin.y);\n    } else {\n        console.log('out of space');\n    }\n}\n\n// Clear sprite and start over..\nsprite.clear();\n\n// Or, resize sprite by passing larger dimensions..\nsprite.resize(128, 128);   // width, height\n\n```\n\n\n#### Batch packing\n\n```js\nvar ShelfPack = require('shelf-pack');\n\n// If you don't want to think about the size of the sprite,\n// the `autoResize` option will allow it to grow as needed..\nvar sprite = new ShelfPack(10, 10, { autoResize: true });\n\n// Bins can be allocated in batches..\n// Each bin should have `width`, `height` (or `w`, `h`) properties..\nvar bins = [\n    { id: 'a', width: 10, height: 10 },\n    { id: 'b', width: 10, height: 12 },\n    { id: 'c', w: 10, h: 12 },\n    { id: 'd', w: 10, h: 10 }\n];\n\nvar results = sprite.pack(bins);\n// returns an Array of packed bins objects with `x`, `y`, `w`, `h`, `width`, `height` properties..\n\nresults.forEach(function(bin) {\n    console.log('bin packed at ' + bin.x + ', ' + bin.y);\n});\n\n\n// If you don't mind letting ShelfPack modify your objects,\n// the `inPlace` option will decorate your bin objects with `x` and `y` properties.\n// Fancy!\nvar moreBins = [\n    { id: 'e', width: 12, height: 24 },\n    { id: 'f', width: 12, height: 12 },\n    { id: 'g', w: 10, h: 10 }\n];\n\nsprite.pack(moreBins, { inPlace: true });\nmoreBins.forEach(function(bin) {\n    console.log('bin packed at ' + bin.x + ', ' + bin.y);\n});\n\n\n```\n\n### Documentation\n\nComplete API documentation is here:  http://mapbox.github.io/shelf-pack/docs/\n\n\n### See also\n\nJ. Jylänky, \"A Thousand Ways to Pack the Bin - A Practical\nApproach to Two-Dimensional Rectangle Bin Packing,\"\nhttp://clb.demon.fi/files/RectangleBinPack.pdf, 2010\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mapbox/shelf-pack.git"
  },
  "scripts": {
    "bench": "node bench/bench.js",
    "docs": "documentation build index.js --lint --github --format html --output docs/",
    "lint": "eslint index.js test/ bench/",
    "pretest": "rollup -f umd -n ShelfPack index.js --no-indent --no-strict -o index.umd.js",
    "test": "npm run lint && tap --cov test/*.js"
  },
  "version": "1.1.0"
}
