{
  "_args": [
    [
      "feature-filter@https://registry.npmjs.org/feature-filter/-/feature-filter-2.2.0.tgz",
      "/Users/owenlamb/Desktop/vt-app/node_modules/mapbox-gl"
    ]
  ],
  "_from": "feature-filter@>=2.2.0 <3.0.0",
  "_id": "feature-filter@2.2.0",
  "_inCache": true,
  "_location": "/mapbox-gl/feature-filter",
  "_phantomChildren": {},
  "_requested": {
    "name": "feature-filter",
    "raw": "feature-filter@https://registry.npmjs.org/feature-filter/-/feature-filter-2.2.0.tgz",
    "rawSpec": "https://registry.npmjs.org/feature-filter/-/feature-filter-2.2.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/feature-filter/-/feature-filter-2.2.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/mapbox-gl"
  ],
  "_resolved": "https://registry.npmjs.org/feature-filter/-/feature-filter-2.2.0.tgz",
  "_shasum": "3cc356015e968c362afbdf7ff1bb744ddf7fc2e0",
  "_shrinkwrap": null,
  "_spec": "feature-filter@https://registry.npmjs.org/feature-filter/-/feature-filter-2.2.0.tgz",
  "_where": "/Users/owenlamb/Desktop/vt-app/node_modules/mapbox-gl",
  "bugs": {
    "url": "https://github.com/mapbox/feature-filter/issues"
  },
  "dependencies": {},
  "description": "Creates filtering function for vector tile features",
  "devDependencies": {
    "eslint": "^1.10.3",
    "eslint-config-mourner": "^1.0.1",
    "pbf": "^1.3.5",
    "tape": "^3.2.1",
    "vector-tile": "^1.2.0"
  },
  "eslintConfig": {
    "extends": "mourner",
    "rules": {
      "space-before-function-paren": [
        2,
        "never"
      ]
    }
  },
  "homepage": "https://github.com/mapbox/feature-filter#readme",
  "main": "./index.js",
  "name": "feature-filter",
  "optionalDependencies": {},
  "readme": "## Filter\n\nFilter expressions are used to target specific data in a layer. This library implements the semantics specified by the [Mapbox GL JS spec](https://www.mapbox.com/mapbox-gl-style-spec/#filter).\n\n### API\n\n`featureFilter(filter)`\n\nGiven a filter expressed as nested arrays, return a new function\nthat evaluates whether a given feature (with a .properties or .tags property)\npasses its test.\n\n#### Parameters\n\n| parameter | type  | description      |\n| --------- | ----- | ---------------- |\n| `filter`  | Array | mapbox gl filter |\n\n**Returns** `Function`, filter-evaluating function\n\n### Usage\n\n``` javascript\nvar ff = require('feature-filter');\n\n// will match a feature with class of street_limited,\n// AND an admin_level less than or equal to 3,\n// that's NOT a polygon.\nvar filter = [\n    \"all\",\n    [\"==\", \"class\", \"street_limited\"],\n    [\"<=\", \"admin_level\", 3],\n    [\"!=\", \"$type\", \"Polygon\"]\n]\n\n// will match a feature that has a class of\n// wetland OR wetland_noveg.\n// [\"in\", \"class\", \"wetland\", \"wetland_noveg\"]\n\n// testFilter will be a function that returns a boolean\nvar testFilter = ff(filter);\n\n// Layer feature that you're testing. Must have type\n// and properties keys.\nvar feature = {\n    type: 2,\n    properties: {\n       class: \"street_limited\"\n       admin_level: 1\n    }\n};\n\n// will return a boolean based on whether the feature matched the filter\nreturn testFilter(feature);\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/mapbox/feature-filter.git"
  },
  "scripts": {
    "pretest": "eslint index.js test.js",
    "test": "tape test.js"
  },
  "version": "2.2.0"
}
