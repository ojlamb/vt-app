{
  "_args": [
    [
      "geojson-vt@https://registry.npmjs.org/geojson-vt/-/geojson-vt-2.4.0.tgz",
      "/Users/owenlamb/Desktop/vt-app/node_modules/mapbox-gl"
    ]
  ],
  "_from": "geojson-vt@>=2.4.0 <3.0.0",
  "_id": "geojson-vt@2.4.0",
  "_inCache": true,
  "_location": "/mapbox-gl/geojson-vt",
  "_phantomChildren": {},
  "_requested": {
    "name": "geojson-vt",
    "raw": "geojson-vt@https://registry.npmjs.org/geojson-vt/-/geojson-vt-2.4.0.tgz",
    "rawSpec": "https://registry.npmjs.org/geojson-vt/-/geojson-vt-2.4.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/geojson-vt/-/geojson-vt-2.4.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/mapbox-gl"
  ],
  "_resolved": "https://registry.npmjs.org/geojson-vt/-/geojson-vt-2.4.0.tgz",
  "_shasum": "3c1cf44493f35eb4d2c70c95da6550de66072c05",
  "_shrinkwrap": null,
  "_spec": "geojson-vt@https://registry.npmjs.org/geojson-vt/-/geojson-vt-2.4.0.tgz",
  "_where": "/Users/owenlamb/Desktop/vt-app/node_modules/mapbox-gl",
  "author": {
    "name": "Vladimir Agafonkin"
  },
  "bugs": {
    "url": "https://github.com/mapbox/geojson-vt/issues"
  },
  "dependencies": {},
  "description": "Slice GeoJSON data into vector tiles efficiently",
  "devDependencies": {
    "benchmark": "^2.1.0",
    "browserify": "^13.0.1",
    "coveralls": "^2.11.9",
    "eslint": "^2.10.2",
    "eslint-config-mourner": "^2.0.1",
    "faucet": "0.0.1",
    "istanbul": "^0.4.3",
    "tape": "^4.5.1",
    "uglify-js": "^2.6.2",
    "watchify": "^3.7.0"
  },
  "eslintConfig": {
    "extends": "mourner"
  },
  "homepage": "https://github.com/mapbox/geojson-vt",
  "keywords": [
    "spatial",
    "geojson",
    "tiles",
    "geometry"
  ],
  "license": "ISC",
  "main": "src/index.js",
  "name": "geojson-vt",
  "optionalDependencies": {},
  "readme": "## geojson-vt &mdash; GeoJSON Vector Tiles\n\n[![Build Status](https://travis-ci.org/mapbox/geojson-vt.svg?branch=master)](https://travis-ci.org/mapbox/geojson-vt)\n[![Coverage Status](https://coveralls.io/repos/mapbox/geojson-vt/badge.svg)](https://coveralls.io/r/mapbox/geojson-vt)\n\nA highly efficient JavaScript library for **slicing GeoJSON data into vector tiles on the fly**,\nprimarily designed to enable rendering and interacting with large geospatial datasets\non the browser side (without a server).\n\nCreated to power GeoJSON in [Mapbox GL JS](https://github.com/mapbox/mapbox-gl-js),\nbut can be useful in other visualization platforms\nlike [Leaflet](https://github.com/Leaflet/Leaflet) and [d3](https://github.com/mbostock/d3),\nas well as Node.js server applications.\n\nResulting tiles conform to the JSON equivalent\nof the [vector tile specification](https://github.com/mapbox/vector-tile-spec/).\nTo make data rendering and interaction fast, the tiles are simplified,\nretaining the minimum level of detail appropriate for each zoom level\n(simplifying shapes, filtering out tiny polygons and polylines).\n\nRead more on how the library works [on the Mapbox blog](https://www.mapbox.com/blog/introducing-geojson-vt/).\n\nThere's a C++11 port: [geojson-vt-cpp](https://github.com/mapbox/geojson-vt-cpp)\n\n### Demo\n\nHere's **geojson-vt** action in [Mapbox GL JS](https://github.com/mapbox/mapbox-gl-js),\ndynamically loading a 100Mb US zip codes GeoJSON with 5.4 million points:\n\n![](https://cloud.githubusercontent.com/assets/25395/5360312/86028d8e-7f91-11e4-811f-87f24acb09ca.gif)\n\nThere's a convenient [debug page](http://mapbox.github.io/geojson-vt/debug/) to test out **geojson-vt** on different data.\nJust drag any GeoJSON on the page, watching the console.\n\n![](https://cloud.githubusercontent.com/assets/25395/5363235/41955c6e-7fa8-11e4-9575-a66ef54cb6d9.gif)\n\n### Usage\n\n```js\n// build an initial index of tiles\nvar tileIndex = geojsonvt(geoJSON);\n\n// request a particular tile\nvar features = tileIndex.getTile(z, x, y).features;\n\n// show an array of tile coordinates created so far\nconsole.log(tileIndex.tileCoords); // [{z: 0, x: 0, y: 0}, ...]\n```\n\n### Options\n\nYou can fine-tune the results with an options object,\nalthough the defaults are sensible and work well for most use cases.\n\n```js\nvar tileIndex = geojsonvt(data, {\n\tmaxZoom: 14,  // max zoom to preserve detail on\n\ttolerance: 3, // simplification tolerance (higher means simpler)\n\textent: 4096, // tile extent (both width and height)\n\tbuffer: 64,\t  // tile buffer on each side\n\tdebug: 0      // logging level (0 to disable, 1 or 2)\n\n\tindexMaxZoom: 4,        // max zoom in the initial tile index\n\tindexMaxPoints: 100000, // max number of points per tile in the index\n\tsolidChildren: false    // whether to include solid tile children in the index\n});\n```\n\n### Browser builds\n\n```bash\nnpm install\nnpm run build-dev # development build, used by the debug page\nnpm run build-min # minified production build\n```\n\n### Changelog\n\n##### 2.3.0 (Jul 29, 2016)\n\n- Improved tiling algorithm to avoid redundant clipping when tiles are requested in an empty area.\n- Fixed issues with GeoJSON that only has data above 180 or below -180 longitude.\n\n##### 2.2.0 (Jun 9, 2016)\n\n- Fixed ring winding order for polygons and multipolygons in accordance with vector tile specification 2.0.\n- Fixed handling of features with null geometry (now ignored instead of throwing an error).\n\n##### 2.1.8 (Nov 9, 2015)\n\n- Fixed a bug where `getTile` would initially return `null` when requesting a child of a solid clipped square tile.\n\n##### 2.1.7 (Oct 16, 2015)\n\n- Expose transform methods in a separate file (`transform.js`).\n\n##### 2.1.6 (Sep 22, 2015)\n\n- Fixed a bug where `getTile` could generate a lot of unnecessary tiles.\n- Fixed a bug where an empty GeoJSON generated tiles.\n\n##### 2.1.5 (Aug 14, 2015)\n\n- Added `tileCoords` property with an array of coordinates of all tiles created so far.\n\n##### 2.1.4 (Aug 14, 2015)\n\n- Improved `getTile` to always return `null` on non-existing or invalid tiles.\n\n##### 2.1.3 (Aug 13, 2015)\n\n- Added `solidChildren` option that includes children of solid filled square tiles in the index (off by default).\n- Added back solid tile heuristics (not tiling solid filled square tiles further).\n\n##### 2.1.2 (Aug 13, 2015)\n\n- Fixed a crazy slowdown (~30x) when generating a huge number of tiles on the first run.\n- Removed clipped solid square heuristics (that actually didn't work since 2.0.0).\n\n##### 2.1.1 (June 18, 2015)\n\n- Fixed duplicate points in polygons.\n\n##### 2.1.0 (June 15, 2015)\n\n- Added proper handling for features crossing or near the date line.\n\n##### 2.0.1 (June 9, 2015)\n\n- 10-20% faster tile indexing.\n- Fixed latitude extremes not being clamped.\n\n##### 2.0.0 (Mar 20, 2015)\n\n- **Breaking**: `maxZoom` renamed to `indexMaxZoom`, `maxPoints` to `indexMaxPoints`, `baseZoom` to `maxZoom`.\n- Improved performance of both indexing and on-demand tile requests.\n- Improved memory footprint.\n- Better indexing defaults.\n- Fixed a bug where unnecessary memory was retained in some cases.\n\n##### 1.1.0 (Mar 2, 2015)\n\n- Add `buffer` and `extent` options.\n\n##### 1.0.0 (Dec 8, 2014)\n\n- Initial release.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mapbox/geojson-vt.git"
  },
  "scripts": {
    "build-dev": "browserify -d src/index.js -s geojsonvt -o geojson-vt-dev.js",
    "build-min": "browserify src/index.js -s geojsonvt | uglifyjs -c -m -o geojson-vt.js",
    "cov": "istanbul cover tape test/test*.js",
    "coveralls": "npm run cov && coveralls < ./coverage/lcov.info",
    "prepublish": "npm run build-dev && npm run build-min",
    "test": "eslint src/*.js test/*.js debug/viz.js && tape test/test-*.js | faucet",
    "watch": "watchify -v -d src/index.js -s geojsonvt -o geojson-vt-dev.js"
  },
  "version": "2.4.0"
}
