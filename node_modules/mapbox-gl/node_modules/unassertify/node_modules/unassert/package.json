{
  "_args": [
    [
      "unassert@https://registry.npmjs.org/unassert/-/unassert-1.4.1.tgz",
      "/Users/owenlamb/Desktop/vt-app/node_modules/mapbox-gl/node_modules/unassertify"
    ]
  ],
  "_from": "unassert@>=1.3.1 <2.0.0",
  "_id": "unassert@1.4.1",
  "_inCache": true,
  "_location": "/mapbox-gl/unassertify/unassert",
  "_phantomChildren": {
    "esprima": "2.7.3"
  },
  "_requested": {
    "name": "unassert",
    "raw": "unassert@https://registry.npmjs.org/unassert/-/unassert-1.4.1.tgz",
    "rawSpec": "https://registry.npmjs.org/unassert/-/unassert-1.4.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/unassert/-/unassert-1.4.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/mapbox-gl/unassertify"
  ],
  "_resolved": "https://registry.npmjs.org/unassert/-/unassert-1.4.1.tgz",
  "_shasum": "b3e890e4a4c5c77249a6d525dd4b4bc8b8f6d6b4",
  "_shrinkwrap": null,
  "_spec": "unassert@https://registry.npmjs.org/unassert/-/unassert-1.4.1.tgz",
  "_where": "/Users/owenlamb/Desktop/vt-app/node_modules/mapbox-gl/node_modules/unassertify",
  "author": {
    "email": "takuto.wada@gmail.com",
    "name": "Takuto Wada",
    "url": "https://github.com/twada"
  },
  "bugs": {
    "url": "https://github.com/twada/unassert/issues"
  },
  "dependencies": {
    "deep-equal": "^1.0.0",
    "escallmatch": "^1.4.1",
    "esprima": "^2.5.0",
    "espurify": "^1.3.0",
    "estraverse": "^4.1.0",
    "esutils": "^2.0.2"
  },
  "description": "Encourage reliable programming by writing assertions in production code, and compiling them away from release",
  "devDependencies": {
    "escodegen": "^1.7.0",
    "mocha": "^2.3.3"
  },
  "files": [
    "README.md",
    "CHANGELOG.md",
    "index.js",
    "package.json"
  ],
  "homepage": "https://github.com/twada/unassert",
  "keywords": [
    "DbC",
    "unassert",
    "assert",
    "assertion"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "unassert",
  "optionalDependencies": {},
  "readme": "unassert\n================================\n\nEncourage reliable programming by writing assertions in production code, and compiling them away from release.\n\n[![Build Status][travis-image]][travis-url]\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][depstat-image]][depstat-url]\n[![License][license-image]][license-url]\n\nSee: \"[unassert - encourage reliable programming by writing assertions in production](http://www.slideshare.net/t_wada/unassert)\" -- talk at NodeFest 2015.\n\n\n#### RELATED MODULES\n\n- [unassertify](https://github.com/twada/unassertify): Browserify transform for unassert\n- [babel-plugin-unassert](https://github.com/twada/babel-plugin-unassert): Babel plugin for unassert\n- [webpack-unassert-loader](https://github.com/zoncoen/webpack-unassert-loader): Webpack loader for unassert\n- [gulp-unassert](https://github.com/twada/gulp-unassert): Gulp plugin for unassert\n- [unassert-cli](https://github.com/twada/unassert-cli): CLI for unassert\n\n\nINSTALL\n---------------------------------------\n\n```\n$ npm install --save-dev unassert\n```\n\n\nEXAMPLE\n---------------------------------------\n\nFor given `math.js` below,\n\n```javascript\n'use strict';\n\nvar assert = require('assert');\n\nfunction add (a, b) {\n    console.assert(typeof a === 'number');\n    assert(!isNaN(a));\n    assert.equal(typeof b, 'number');\n    assert.ok(!isNaN(b));\n    return a + b;\n}\n```\n\nApply `unassert` then generate modified code to console.\n\n```javascript\nvar esprima = require('esprima');\nvar escodegen = require('escodegen');\nvar unassert = require('unassert');\nvar fs = require('fs');\nvar path = require('path');\nvar filepath = path.join(__dirname, 'math.js');\n\nvar ast = esprima.parse(fs.readFileSync(filepath));\nvar modifiedAst = unassert(ast);\n\nconsole.log(escodegen.generate(modifiedAst));\n```\n\nThen you will see assert calls disappear.\n\n```javascript\n'use strict';\nfunction add(a, b) {\n    return a + b;\n}\n```\n\nNote: unassert supports removal of [power-assert](https://github.com/power-assert-js/power-assert) declarations (`var assert = require('power-assert');`) too.\n\n\nSUPPORTED PATTERNS\n---------------------------------------\n\nAssertion expressions are removed when they match patterns below. In other words, unassert removes assertion calls that are compatible with Node.js standard [assert](https://nodejs.org/api/assert.html) API (and `console.assert`).\n\n* `assert(value, [message])`\n* `assert.ok(value, [message])`\n* `assert.equal(actual, expected, [message])`\n* `assert.notEqual(actual, expected, [message])`\n* `assert.strictEqual(actual, expected, [message])`\n* `assert.notStrictEqual(actual, expected, [message])`\n* `assert.deepEqual(actual, expected, [message])`\n* `assert.notDeepEqual(actual, expected, [message])`\n* `assert.deepStrictEqual(actual, expected, [message])`\n* `assert.notDeepStrictEqual(actual, expected, [message])`\n* `assert.fail(actual, expected, message, operator)`\n* `assert.throws(block, [error], [message])`\n* `assert.doesNotThrow(block, [message])`\n* `assert.ifError(value)`\n* `console.assert(value, [message])`\n\nunassert also removes assert variable declarations,\n\n* `var assert = require(\"assert\")`\n* `var assert = require(\"power-assert\")`\n* `import assert from \"assert\"`\n* `import assert from \"power-assert\"`\n* `import * as assert from \"assert\"`\n* `import * as assert from \"power-assert\"`\n\nand assignments.\n\n* `assert = require(\"assert\")`\n* `assert = require(\"power-assert\")`\n\n\nAUTHOR\n---------------------------------------\n* [Takuto Wada](https://github.com/twada)\n\n\nLICENSE\n---------------------------------------\nLicensed under the [MIT](http://twada.mit-license.org/2015-2016) license.\n\n\n[npm-url]: https://npmjs.org/package/unassert\n[npm-image]: https://badge.fury.io/js/unassert.svg\n\n[travis-url]: https://travis-ci.org/twada/unassert\n[travis-image]: https://secure.travis-ci.org/twada/unassert.svg?branch=master\n\n[depstat-url]: https://gemnasium.com/twada/unassert\n[depstat-image]: https://gemnasium.com/twada/unassert.svg\n\n[license-url]: http://twada.mit-license.org/2015-2016\n[license-image]: https://img.shields.io/badge/license-MIT-brightgreen.svg\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/twada/unassert.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.4.1"
}
